~/PycharmProjects/test_issues
(test_issue01) ❯ python -m pytest issue02.py

======================================================================================== test session starts ========================================================================================
platform darwin -- Python 3.7.2, pytest-5.4.1, py-1.8.1, pluggy-0.13.1
rootdir: /Users/dyurogova/PycharmProjects/test_issues
plugins: xdist-1.31.0, forked-1.1.3, cov-2.8.1
collected 6 items

issue02.py .F.F.F                                                                                                                                                                             [100%]

============================================================================================= FAILURES ==============================================================================================
_________________________________________________________________________________________ test_decode[ - ] __________________________________________________________________________________________

morse_message = ' ', exp = ' '

    @pytest.mark.parametrize('morse_message,exp', [
        ('.- ...- .. - --- -....- .- .-', 'AVITO-AA'),
        (' ', ' '),
        ('', ''),
        ('--..--  ', ', '),
        ('.... . .-.. .-.. --- --..--  .-- --- .-. .-.. -..', 'HELLO,WORLD'),
        (encode('HI, ANALYST'), 'HI, ANALYST')
    ])
    def test_decode(morse_message, exp):
>       assert decode(morse_message) == exp
E       AssertionError: assert '' == ' '
E         Strings contain only whitespace, escaping them using repr()
E         - ' '
E         ?  -
E         + ''

issue02.py:60: AssertionError
_____________________________________________________________________________________ test_decode[--..--  -, ] ______________________________________________________________________________________

morse_message = '--..--  ', exp = ', '

    @pytest.mark.parametrize('morse_message,exp', [
        ('.- ...- .. - --- -....- .- .-', 'AVITO-AA'),
        (' ', ' '),
        ('', ''),
        ('--..--  ', ', '),
        ('.... . .-.. .-.. --- --..--  .-- --- .-. .-.. -..', 'HELLO,WORLD'),
        (encode('HI, ANALYST'), 'HI, ANALYST')
    ])
    def test_decode(morse_message, exp):
>       assert decode(morse_message) == exp
E       AssertionError: assert ',' == ', '
E         - ,
E         + ,

issue02.py:60: AssertionError
________________________________________________________________ test_decode[.... .. --..--   .- -. .- .-.. -.-- ... --HI, ANALYST] _________________________________________________________________

morse_message = '.... .. --..--   .- -. .- .-.. -.-- ... -', exp = 'HI, ANALYST'

    @pytest.mark.parametrize('morse_message,exp', [
        ('.- ...- .. - --- -....- .- .-', 'AVITO-AA'),
        (' ', ' '),
        ('', ''),
        ('--..--  ', ', '),
        ('.... . .-.. .-.. --- --..--  .-- --- .-. .-.. -..', 'HELLO,WORLD'),
        (encode('HI, ANALYST'), 'HI, ANALYST')
    ])
    def test_decode(morse_message, exp):
>       assert decode(morse_message) == exp
E       AssertionError: assert 'HI,ANALYST' == 'HI, ANALYST'
E         - HI, ANALYST
E         ?    -
E         + HI,ANALYST

issue02.py:60: AssertionError
====================================================================================== short test summary info ======================================================================================
FAILED issue02.py::test_decode[ - ] - AssertionError: assert '' == ' '
FAILED issue02.py::test_decode[--..--  -, ] - AssertionError: assert ',' == ', '
FAILED issue02.py::test_decode[.... .. --..--   .- -. .- .-.. -.-- ... --HI, ANALYST] - AssertionError: assert 'HI,ANALYST' == 'HI, ANALYST'
==================================================================================== 3 failed, 3 passed in 0.12s ====================================================================================
